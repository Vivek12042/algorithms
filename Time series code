import numpy as np
import matplotlib.pyplot as plt
from astropy.timeseries import LombScargle

# Generate synthetic data (for demonstration purposes)
# Time: evenly spaced data points
time = np.linspace(0, 100, 500)
# Light curve: a sinusoidal signal with added noise
signal = np.sin(2 * np.pi * time / 20) + 0.1 * np.random.randn(len(time))

# Use Lomb-Scargle to find the best period
ls = LombScargle(time, signal)
frequency, power = ls.autopower()

# Find the period (inverse of frequency)
period = 1 / frequency[np.argmax(power)]
print(f"Detected Period: {period} units of time")

# Plot the original light curve
plt.figure(figsize=(12, 6))
plt.subplot(1, 2, 1)
plt.plot(time, signal, label='Light Curve')
plt.title('Original Light Curve')
plt.xlabel('Time')
plt.ylabel('Brightness')
plt.grid(True)

# Fold the light curve at the detected period
phase = (time % period) / period  # Phase of each data point
sorted_indices = np.argsort(phase)
plt.subplot(1, 2, 2)
plt.plot(phase[sorted_indices], signal[sorted_indices], 'o', label='Folded Light Curve')
plt.title(f'Folded Light Curve at {period} time units')
plt.xlabel('Phase')
plt.ylabel('Brightness')
plt.grid(True)

plt.tight_layout()
plt.show()
